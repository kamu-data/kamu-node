name: release
on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+*
jobs:
  build_linux:
    name: Build / Linux
    runs-on: ubuntu-latest
    strategy:
      matrix:
        crate:
          - kamu-api-server
          - kamu-oracle-provider
        target:
          - x86_64-unknown-linux-gnu
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1  # Uses rust-toolchain file
        with:
          components: rustfmt
          target: ${{ matrix.target }}
          override: true
      - uses: cargo-bins/cargo-binstall@main
      - name: Install cross
        run: cargo binstall cross -y
      - name: Build
        run: cross build -p ${{ matrix.crate }} --release --target=${{ matrix.target }}
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.crate }}-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/${{ matrix.crate }}
          if-no-files-found: error
  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [ build_linux ]
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
  upload_assets_targz:
    name: Upload Assets (tar.gz)
    runs-on: ubuntu-latest
    needs: [ create_release ]
    strategy:
      matrix:
        crate:
          - kamu-api-server
          - kamu-oracle-provider
        target:
          - x86_64-unknown-linux-gnu
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ matrix.crate }}-${{ matrix.target }}
          path: ${{ matrix.crate }}-${{ matrix.target }}
      - name: Compress Artifacts
        run: tar -czvf ${{ matrix.crate }}-${{ matrix.target }}.tar.gz ${{ matrix.crate }}-${{ matrix.target }}
      - name: Upload Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ${{ matrix.crate }}-${{ matrix.target }}.tar.gz
          asset_name: ${{ matrix.crate }}-${{ matrix.target }}.tar.gz
          asset_content_type: application/gzip
