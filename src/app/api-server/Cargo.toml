[package]
name = "kamu-api-server"
description = "Kamu Node's API server component"
version = { workspace = true }
homepage = { workspace = true }
repository = { workspace = true }
authors = { workspace = true }
readme = { workspace = true }
license-file = { workspace = true }
keywords = { workspace = true }
include = { workspace = true }
edition = { workspace = true }
publish = { workspace = true }

# Disabling examples discovery as we need them very rarely, but they significantly slow down build times
autoexamples = false
build = "build.rs"


[lib]
doctest = false


[features]
default = ["ingest-evm", "ingest-mqtt", "query-extensions-json"]

ingest-evm = ["kamu/ingest-evm"]
ingest-ftp = ["kamu/ingest-ftp"]
ingest-mqtt = ["kamu/ingest-mqtt", "dep:rumqttc"]
query-extensions-json = ["kamu/query-extensions-json"]


[dependencies]
dill = { version = "0.14", default-features = false }

container-runtime = { workspace = true }
crypto-utils = { workspace = true }
database-common = { workspace = true }
database-common-macros = { workspace = true }
email-utils = { workspace = true }
email-gateway = { workspace = true }
graceful-shutdown = { workspace = true }
http-common = { workspace = true }
init-on-startup = { workspace = true }
internal-error = { workspace = true }
messaging-outbox = { workspace = true }
observability = { workspace = true, default-features = false, features = [
    "dill",
    "opentelemetry",
    "prometheus",
] }
odf = { workspace = true, default-features = false, features = [
    "arrow",
    "http",
    "lfs",
    "s3",
    "sqlx-postgres",
    "sqlx-sqlite",
    "utoipa",
] }
s3-utils = { workspace = true }
server-console = { workspace = true }
time-source = { workspace = true }

kamu = { workspace = true }
kamu-accounts = { workspace = true }
kamu-accounts-inmem = { workspace = true }
kamu-accounts-postgres = { workspace = true }
kamu-accounts-services = { workspace = true }
kamu-accounts-sqlite = { workspace = true }
kamu-adapter-auth-oso-rebac = { workspace = true }
kamu-adapter-auth-web3 = { workspace = true, default-features = false, features = ["did-pkh"] }
kamu-adapter-flight-sql = { workspace = true }
kamu-adapter-graphql = { workspace = true }
kamu-auth-web3-inmem = { workspace = true }
kamu-auth-web3-postgres = { workspace = true }
kamu-auth-web3-sqlite = { workspace = true }
kamu-adapter-http = { workspace = true, features = [
    "e2e",
], default-features = false }
kamu-adapter-oauth = { workspace = true }
kamu-adapter-odata = { workspace = true }
kamu-adapter-flow-dataset = { workspace = true }
kamu-adapter-flow-webhook = { workspace = true }
kamu-adapter-task-dataset = { workspace = true }
kamu-adapter-task-webhook = { workspace = true }
kamu-auth-rebac-inmem = { workspace = true }
kamu-auth-rebac-postgres = { workspace = true }
kamu-auth-rebac-services = { workspace = true }
kamu-auth-rebac-sqlite = { workspace = true }
kamu-auth-web3-services = { workspace = true }
kamu-datasets = { workspace = true }
kamu-datasets-inmem = { workspace = true }
kamu-datasets-postgres = { workspace = true }
kamu-datasets-services = { workspace = true, default-features = false, features = [
    "lfs",
    "s3",
] }
kamu-datasets-sqlite = { workspace = true }
kamu-flow-system = { workspace = true }
kamu-flow-system-inmem = { workspace = true }
kamu-flow-system-postgres = { workspace = true }
kamu-flow-system-services = { workspace = true }
kamu-flow-system-sqlite = { workspace = true }
kamu-messaging-outbox-inmem = { workspace = true }
kamu-messaging-outbox-postgres = { workspace = true }
kamu-messaging-outbox-sqlite = { workspace = true }
kamu-search-openai = { workspace = true }
kamu-search-services = { workspace = true }
kamu-search-qdrant = { workspace = true }
kamu-task-system = { workspace = true }
kamu-task-system-inmem = { workspace = true }
kamu-task-system-postgres = { workspace = true }
kamu-task-system-services = { workspace = true }
kamu-task-system-sqlite = { workspace = true }
kamu-webhooks = { workspace = true }
kamu-webhooks-services = { workspace = true }
kamu-webhooks-inmem = { workspace = true }
kamu-webhooks-postgres = { workspace = true }
kamu-webhooks-sqlite = { workspace = true }


# Top-level TLS and runtime configurations
# TODO: Include alloy, aws-smithy
# TODO: Unify deps around either ring or aws-lc-rs
# TODO: Unify deps around either using webpki or native certs
reqwest = { version = "0.12", default-features = false, features = [
    "rustls-tls-webpki-roots",
] }
rustls = { version = "0.23", default-features = false, features = [
    "aws-lc-rs",
] }
rumqttc = { optional = true, version = "0.24", default-features = false, features = [
    "use-rustls",
] }
sqlx = { version = "0.8", default-features = false, features = [
    "runtime-tokio",
    "tls-rustls-aws-lc-rs",
] }
tokio-tungstenite = { version = "0.27", features = ["rustls-tls-webpki-roots"] }

# APIs
http = "1"
arrow-flight = { version = "55", features = ["flight-sql-experimental"] }
axum = { version = "0.8", features = ["ws"] }
async-graphql = { version = "7", default-features = false }
async-graphql-axum = "7"
tonic = { version = "0.12", default-features = false }
tower = { version = "0.5", features = ["util"] }
tower-http = { version = "0.6", features = ["trace", "cors", "catch-panic"] }
utoipa = { version = "5", default-features = false, features = [] }
utoipa-axum = { version = "0.2", default-features = false, features = [] }

# Tracing / logging / telemetry / metrics
prometheus = { version = "0.14", default-features = false }
tracing = "0.1"

# Utils
async-trait = { version = "0.1", default-features = false }
askama = { version = "0.14" }
chrono = "0.4"
clap = { version = "4", default-features = false, features = [
    "std",
    "color",
    "help",
    "usage",
    "error-context",
    "suggestions",
    "derive",
    "cargo",
    # "env",
    "wrap_help",
] }
duration-string = { version = "0.5", default-features = false, features = [
    "serde",
] }
figment = { version = "0.10", features = ["env", "yaml", "json"] }
futures = "0.3"
indoc = "2"
secrecy = "0.10"
serde = { version = "1", features = ["derive"] }
serde_json = "1"
strum_macros = { version = "0.27", default-features = false }
tempfile = "3"
tokio = { version = "1", default-features = false, features = [
    "macros",
    "signal",
] }
tokio-stream = { version = "0.1", default-features = false, features = ["net"] }
url = "2"


[dev-dependencies]
email-gateway = { workspace = true, features = ["testing"] }
kamu = { workspace = true, features = ["testing"] }
test-utils = { workspace = true }

paste = { version = "1", default-features = false }
pretty_assertions = "1"
test-group = { version = "1" }
test-log = { version = "0.2", features = ["trace"] }


[build-dependencies]
vergen = { version = "8", features = [
    "build",
    "cargo",
    "git",
    "gitcl",
    "rustc",
] }
